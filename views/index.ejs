<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="bootstrap/dist/css/bootstrap.css"/>
  <title>Home</title>
</head>
<body class="container" style="background-color: #f9fafc">

<header>
  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <div class="container-fluid">
      <div class="navbar-header">
        <a class="navbar-brand" href="/">Home</a>
      </div>
    </div>
  </nav>
</header>

<main>
  <div class="row justify-content-md-center">
    <h3 class="mt-3">Analysing movie streaming providers.</h3>
    <small class="text-muted">Choose the movie stream provider for more detailed info.</small>
    <div class="row mt-4">
      <% providers.forEach(function (provider){ %>
        <div class="col-md-3 col-lg-2 col-sm-3">
          <a href="<%= '/provider_details?provider_id=' + provider.id %>"><%= provider.name %></a>
        </div>
      <% }); %>
    </div>
    <div class="mt-5">
      <canvas id="imdbRatings" width="800" height="400"></canvas>
    </div>
    <div class="mt-5">
      <canvas id="genresChart" width="800" height="400"></canvas>
    </div>
  </div>
</main>

<script src="chart.js/dist/chart.js"></script>
<script src="jquery/dist/jquery.js" charset="utf-8"></script>
<script src="bootstrap/dist/js/bootstrap.js" charset="utf-8"></script>
<script>
  const imdbDataRaw = '<%- JSON.stringify(imdbData) %>'
  const imdbData = JSON.parse(imdbDataRaw)
  const imdbCanvas = document.getElementById("imdbRatings").getContext('2d')

  const providerNames = imdbData.map(o => o.provider_name)
  let providerBorderColors = [
    'rgb(255, 99, 132)',
    'rgb(153, 102, 255)',
    'rgb(75, 192, 192)',
    'rgb(54, 162, 235)',
  ]
  let providerBackgroundColors = [
    'rgba(255, 99, 132, 0.2)',
    'rgba(153, 102, 255, 0.2)',
    'rgba(75, 192, 192, 0.2)',
    'rgba(54, 162, 235, 0.2)',
  ]

  const imdbMovieCount = imdbData.map(o => o.count)
  const dataset = imdbData.map(o => ({
      label: o.provider_name,
      data: [o.count],
  }))
  const imdbChart = new Chart(imdbCanvas, {
    type: 'bar',
    data: {
      labels: providerNames,
      datasets:[
        {
          label: "all",
          data: imdbMovieCount,
          backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(54, 162, 235, 0.2)',
          ],
          borderColor: [
            'rgb(255, 99, 132)',
            'rgb(153, 102, 255)',
            'rgb(75, 192, 192)',
            'rgb(54, 162, 235)',
          ],
        }
      ],
    },
    options: {
      responsive: true,
      plugins: {
        legend: {
          position: 'top',
        },
        title: {
          display: true,
          text: 'Movies included in the IMDB top 1000'
        }
      }
    },
  })

  // genres chart
  const genresDataRaw = '<%- JSON.stringify(genresData) %>'
  const genresData = JSON.parse(genresDataRaw);
  const genresCanvas = document.getElementById("genresChart").getContext('2d')
  const genreMap = {}
  genresData.forEach((genreData) => {
    if (!genreMap[genreData.genre]) {
      genreMap[genreData.genre] = {}
    }
    genreMap[genreData.genre][genreData.provider] = genreData.count
  })
  // clean up and keep only top 12 genres

  let datasets = []

  providerNames.forEach((provider, i) => {
    let dataset = {
      label: provider,
      data: [],
      fill: true,
      backgroundColor: providerBackgroundColors[i],
      borderColor: providerBorderColors[i],
      pointBackgroundColor: providerBorderColors[i],
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: providerBorderColors[i]
    }
    Object.keys(genreMap).forEach((genre) => {
      let count = genreMap[genre][provider] || 0
      dataset.data.push(count)
    })
    datasets.push(dataset)
  })
  let providerGenres = genresData
  const genresChart = new Chart(genresCanvas, {
    type: 'radar',
    data: {
      labels: Object.keys(genreMap),
      datasets: datasets
    },
    options: {
      elements: {
        line: {
          borderWidth: 3
        }
      }
    },
  })
</script>
</body>
</html>
